services:
  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
    ports:
      - "3000:3000"
    environment:
      PORT: 3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      AUTH_SECRET_KEY: secret_key
      AUTH_KEY_EXPIRATION: 1h
      MYSQL_HOST: db
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: zoologicos
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_USER: root
      MONGO_PASSWORD: root
      MONGO_DATABASE: zoologicos
    depends_on:
      - db
      - redis
      - mongo
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules

  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: "root"
    ports:
      - "3307:3306"
    volumes:
      - ./backend/init_sql:/docker-entrypoint-initdb.d/:ro
      - db_data:/var/lib/mysql

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root     # Initialize root user
      MONGO_INITDB_ROOT_PASSWORD: root     # Initialize root password
    volumes:
      - mongo_data:/data/db

  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://backend:3000/  # Use service name instead of localhost
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules  # Prevent host conflicts

volumes:
  db_data:
  mongo_data:
  redis_data:
  backend_node_modules:
  frontend_node_modules: